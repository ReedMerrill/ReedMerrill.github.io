---
title: "Estimating State-level Partisanship"
author: "Reed Merrill"
bibliography: "mrp.bib"
format:
    revealjs:
        theme: [default, custom.scss]
---

# The Problem

Many important political processes occur within states, but it is not straightforward to measure public opinion there.

- Public opinion data measured at the level of individual states is few and far between.
- Large public opinion surveys, such as the American National Election Study (ANES), are designed to be nationally representative, sometimes at the expense of state level representativeness.
    - Priorities: national representativeness, in-person interviews (over web-based surveys)
    - Result: smaller sample sizes, cluster sampling

# Objective

Estimate partisanship for each state for the last 35 years.

This talk presents my initial findings regarding model specification for a single year of survey results.

# Plan for the Talk

1. Data & Methods
    a. Overall Approach
    b. Data
    c. Estimating state-level Party Identification 
2. Results
    a. State and national estimates
    b. Model Specification

# Data & Methods

**Overall Approach**

Test various predictive models for estimating state-level partisanship.

1. Simulate a smaller ANES sample by estimate partisanship at the individual level using a small subset of the CES 2012 data.
2. Poststratify those estimates to the state level.
3. Validate the model's predictions against the full CES 2012 data.

## Data: Public Opinion Surveys

| Survey | Typical Sample Size | Sample Design | Years Active |
| --- | --- | --- | --- |
| ANES | 1,200--6,000 (1988--2020) | Hybrid Matched Random & Cluster Sampling | 1948--present |
| CES | 50,000--60,000 | Matched Random Sample | 2008--present |
: *Table 1: Survey Characteristics in Presidential Election Years*

- Data: 2012 CES.
    - First year of the CES that has a large sample size (n = 54,535).
    - Initial testing of the 2008 CES (n = 32,800) showed it was much less representative than the 2012 survey.
- Training and Test Sets
    - The same 5% of the CES data is used for each test (n = 2,541).
    - Validation of each test is done on the remaining 95% of the data (n = 48,284).
    - Training set size is based on computational limitations.

---

**Note on Validation Data**

- Directly use the 2012 CES data to validate the models.
- Its sample size and sampling strategy make it the best option for estimating state-level partisanship [see @gelmanChapter and @ornstein2023].

**Postratification Frame**

- Constructed using the 5-year version of the 2012 American Community Survey (ACS) via IPUMS USA [@ipumsUsa]. 

::: {.notes}
- Will talk more about the poststratification frame later.
- Integrated Public Use Microdata Series (IPUMS) 
    - a project of the Minnesota Population Center.
:::

## Estimating State-level Party Identification 

**Steps**

1. Predictive modeling of party identification (general multilevel regression, random forest, ensembles, etc.)
    - I begin with a Bayesian multilevel multinomial logit model.
2. Poststratify predictions for at the state and national levels.

## Predictive Modeling

**Model specification**

- Predictors: State, Age, Ethnicity, Gender, Education, and state-level predictors
- Random intercepts for all predictors except "male"
- Interactions: gender & eth., educ. & age, educ. & eth.

$$
Pr(y_i = \text{dem, rep, ind}) = logit^{-1}[
\alpha_{\rm s[i]}^{\rm state}
+ \alpha_{\rm a[i]}^{\rm age}
+ \alpha_{\rm r[i]}^{\rm eth}
+ \alpha_{\rm e[i]}^{\rm educ}
+ \beta^{\rm male} \cdot {\rm male}_{\rm i} 
\\ + \alpha_{\rm m[i], r[i]}^{\rm male.eth}
+ \alpha_{\rm e[i], a[i]}^{\rm educ.age}
+ \alpha_{\rm e[i], r[i]}^{\rm educ.eth}
\text{(+ state-level predictors)}
]
$$

<p align="right">[see @gelmanChapter]</p>

::: {.notes}
- exlain why I chose MRP, and why I'm using Bayesian methods
    - Regularized model isn't necessary with a Bayesian approach
    - Bayesian methods are more flexible
:::

## Poststratification

<br>

**Example Poststratification Frame**

```{r}
#| tbl-colwidths: [60,40]
load("/home/reed/Dropbox/01-samara-ra/presentations/saguaro-symposium/psframe-ex.RData")
source("/home/reed/Dropbox/01-samara-ra/data-collection/scripts/pid/modeling-functions.r")
knitr::kable(psframe_ex)
```

:::{.notes}
- This is an simplified example of poststratification frame, extracteed from the 2012 frame that I constructed.
- Describe the table.
- Qickly explain the logic behind poststratification.
- Using models based on the previous multilevel regression equation, we can predict party identification at the individual level. 
- We then poststratify these predictions to estimate party identification at the state and national levels.
- Explain n per cell and overall proportions
:::

---

<br>

<p align="center">
**National-level Poststratification**
</p>

$$
\theta^{MRP} = \frac{\sum N_j \theta_j}{\sum N_j}
$$

<p align="center">
**State-level Poststratification**
</p>

$$
\theta_s^{MRP} = \frac{\sum_{j \in s} N_j \theta_j}{\sum_{j \in s} N_j}
$$

where $\theta$ is the predicted party identification, $s$ is the state, $N$ is the number of cells in the poststratification frame, and $j$ is each cell of the poststratification frame.

:::{.notes}
- We poststratify our individual level predictions to estimate party identification at the national and state levels.
:::

---

```{r rep results}
#| label: fig-dem
#| fig-cap: "Predicted Proportion Identifying as Democratic."
#| warning: false

library(usmap)
library(tidyverse)
# Load map and merge data
states_map <- us_map(regions = "states")
states_df_melted_dem <- stpreds_state_output %>% filter(id == "dem") |> select(state, mean_pid)
states_map <- left_join(states_map, states_df_melted_dem, by = c("full" = "state")) %>% drop_na()
# Plot
ggplot(states_map, aes(x = x, y = y, group = group)) +
  geom_polygon(
    aes(fill = mean_pid),
    colour = "black",
    linetype = "solid"
  ) +
  theme_void() +
  scale_fill_gradient(
    limits = c(0.25, .65), breaks = c(.25, .65),
                       name = "Dem", low = "white", high = "#051d45") + 
  theme(legend.margin=margin(l = 0.5, unit='cm'))
```

---

```{r rep results}
#| label: fig-rep
#| fig-cap: "Predicted Proportion Identifying as Republican."
#| warning: false
 
# Load map and merge data
states_map <- us_map(regions = "states")
states_df_melted_rep <- stpreds_state_output %>% filter(id == "rep") |> select(state, mean_pid)
states_map <- left_join(states_map, states_df_melted_rep, by = c("full" = "state")) %>% drop_na()
# Plot
ggplot(states_map, aes(x = x, y = y, group = group)) +
  geom_polygon(
    aes(fill = mean_pid),
    colour = "black",
    linetype = "solid"
  ) +
  theme_void() +
  scale_fill_gradient(
    limits = c(0.2, .62), 
    breaks = c(.2, .62),
                       name = "Rep", low = "white", high = "#450505") + 
  theme(legend.margin=margin(l = 0.5, unit='cm'))
```

---

```{r}
#| label: fig-ind
#| fig-cap: "Predicted Proportion Identifying as Independent."
#| warning: false
 
# Load map and merge data
states_map <- us_map(regions = "states")
states_df_melted_ind <- stpreds_state_output %>% filter(id == "ind") |> select(state, mean_pid)
states_map <- left_join(states_map, states_df_melted_ind, by = c("full" = "state")) %>% drop_na()
# Plot
ggplot(states_map, aes(x = x, y = y, group = group)) +
  geom_polygon(
    aes(fill = mean_pid),
    colour = "black",
    linetype = "solid"
  ) +
  theme_void() +
  scale_fill_gradient(
    limits = c(0.09, .23), 
    breaks = c(0.09, .23), 
                       name = "Ind", low = "white", high = "#8a5603") + 
  theme(legend.margin=margin(l = 0.5, unit='cm'))
```

# References
