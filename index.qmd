---
title: "Estimating State-level Partisanship"
author: "Reed Merrill"
bibliography: "mrp.bib"
format:
    revealjs:
        theme: [default, custom.scss]
---

```{r setup, echo=FALSE, include=FALSE, message=FALSE}
library(tidyverse)
library(ggrepel)
```

## Introduction

::: {.columns}
:::: {.column}
Reed Merrill

PhD Student, Political Science

Fields: American Politics and Methodology

<br>

University of Arizona

School of Government and Public Policy
::::
:::: {.column}
![](images/sgpp-logo.png)
::::
:::

## Motivation and Problem

Many important political processes occur at the state level, but it is not usually straightforward to measure public opinion at scales smaller than the national level.

- Public opinion data measured at the level of individual states is few and far between.
- Large public opinion surveys, such as the American National Election Study (ANES), are designed to be nationally representative, sometimes at the expense of state level representativeness.
    - Priorities: national representativeness, in-person interviews (over web-based surveys)
    - Consequences: 
        - Smaller sample sizes
        - Area-clustered sampling
            - Not representative of sub-national units

## Project Objectives

Estimate partisanship (percentage of population per party) in each state for the last 35 years.

- Need to specify a model that performs well on the American National Election Studies (ANES) survey data.

<!--
::: {.fragment}
ANES Data:

- available for every year of interest
- consistent measures across years (measurement validity)
- sacrifices representativeness
:::
-->

::: {.notes}
- Summarize this slide
    - The last 35 or so years could represent a "contemporary era" for politics
- Have made some progress. I will present my initial results and then show how feature selection, a data mining technique, has improved my model.
- Need to mine features: It is difficult to predict independent partisanship, and existing academic theories are limited in this regard.
:::

## Multilevel Regression and Poststratification:

A technique used to improve the representativeness of unrepresentative survey data.

Steps:

1. Multilevel Regression: Train a model predicting the outcome on the survey data you want estimates for. I use Bayesian multilevel multinomial regression.
    1. Use predictors that are available in census data so that accurate estimates of the population proportions can be used during poststratification.
2. Make predictions: Use the model from **Step 1** to make predictions on characteristics from the broader populations of interest -- in my case, states.
3. Poststratify: Weight the predictions according to how frequently individuals with the combinations of your measured characteristics occur in the populations of interest.

## Predictors

**Individual Level**

These need to be available in census data so that geographic weighting using census data can later be used. They must also be categorical.

Predictors: 

- Age (7 categories)
- Race (white, black, hispanic, other)
- Sex (male, female)
- Education (5 categories; No high school to Post-graduate Degree)

## Predictors

**State-level**

The individual-level predictors can be supplemented to include state-level predictors, because it is straighforward to account for variation in state-level predictors in the upcoming weighting step [see @gelmanChapter].

Predictors: 

- Republican vote share from the most recent election
- Region (Northeast, Midwest, West, South, North Central)
- racial composition (pct. black residents)
- urbanity (pct. urban population)
- religious composition (pct. Christian)

::: {.notes}
- state level predictors improve predictive accuracy and facilitate sub-national estimation
:::

## Poststratification

- Constructed using the 5-year version of the Census Bureau's 2012 American Community Survey (ACS) via IPUMS USA.
    - Yearly demographic estimates of the population, based on 5 years of prior data

<br>

**Example Poststratification Frame**

|state   |region |rep. vote |eth      |male |age   |educ         |n      |
|:-------|:------|:---------|:--------|:----|:-----|:------------|:------|
|Alabama |South  |0.6055    |White    |0    |18-29 |No HS        |26344  |
|Alabama |South  |0.6055    |Black    |1    |50-59 |HS           |29100  |
|...     |...    |...       |...      |...  |...   |...          |...    |
|Wyoming |West   |0.6819    |Black    |1    |30-39 |Some College |120    |
|Wyoming |West   |0.6819    |Hispanic |0    |70+   |HS           |271    |

:::{.notes}
- This is part of poststratification frame, extracted from the 2012 frame that I constructed.
- Describe the table.
- Qickly explain the logic behind poststratification.
- Using models based on the previous multilevel regression equation, we can predict party identification at the individual level. 
- We then poststratify these predictions to estimate party identification at the state and national levels.
- Explain n per cell and overall proportions
:::

## Model Training Approach

- 

## State-level Error Variance of Predictions by Model and Party

```{r val data, cache=TRUE}
source("/home/reed/Dropbox/01-samara-ra/data-collection/scripts/pid/modeling-functions.r")
#####
# Prep data
# load model testing results
load("/home/reed/Dropbox/01-samara-ra/data-collection/scripts/pid/ces-08to20/model-testing/analysis-w-prep.RData")
# load fips file for state abbreviations
fips <- read_csv("/home/reed/Dropbox/01-samara-ra/data-collection/data/input/helpers/us-state-ansi-fips.csv")
fips <- fips |>
    select(
        state = stname,
        abbr = stusps
    )
mrp_results <- mrp_results |> 
    drop_na() |> # the religion data is missing for ND, so needs to be dropped
    left_join(
        fips,
        by = "state"
    )
mrp_results <- mrp_results |>
    left_join(
        all_truth,
        by = c("state", "party")
    )
model_perf_by_party <- mrp_results |>
    mutate(
        abs_error = abs(mean_pid - truth_pid)
    )
# reorder grouping vars
model_perf_by_party$model <- model_perf_by_party$model |> 
    factor(
        levels = c(
            "baseline",
            "stpreds",
            "stpreds_plus",
            "Christian"
        )
    )
levels(model_perf_by_party$model)  <- c("1", "2", "3", "4")
```
```{r plot 1}
load("/home/reed/Dropbox/helpers/party-colors.RData")

# prep to label outliers
findoutlier <- function(x) {
  return(x < quantile(x, .25) - 1.5 * IQR(x) | x > quantile(x, .75) + 1.5 * IQR(x))
}

model_perf_by_party <- model_perf_by_party |>
    group_by(model, party) |>
    mutate(outlier = ifelse(findoutlier(abs_error), abbr, NA))

# plot
ggplot(model_perf_by_party, aes(x = party, y = abs_error, fill = party)) +
    geom_boxplot() +
    theme_minimal() +
    xlab("Model") +
    ylab("Absolute Error") +
    scale_fill_manual(values = c(party_colors$dem, party_colors$ind, party_colors$rep)) +
    guides(color = guide_legend(title = "Party")) +
    geom_text_repel(aes(label = outlier), na.rm = TRUE, size = 3) +
    facet_grid(~ model) +
    scale_x_discrete(position = "top") +
    theme(axis.text.x = element_blank())
```

1: Age, Race, Sex, Education

2: Model 1 predictors + Previous Rep. vote share, Region

3: Model 2 predicots + pct. Black, pct. Urban

4: Model 3 predictors + pct. Christian

## ANES Data

```{r anes, cache=TRUE}
raw_data <- read_csv("anes.csv")
```

## References
